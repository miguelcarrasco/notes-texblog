{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./src/components/Utils/dateInSpanish.tsx","webpack:///./src/components/PostPage/postpage.tsx","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/components/Utils/truncateText.tsx"],"names":["MDXRenderer","require","module","months","dateInSpanish","date","dateArr","split","parseInt","shortcodes","Link","PostPage","mdx","data","console","log","title","truncateText","frontmatter","description","className","id","components","body","onClick","window","scrollTo","pageQuery","React","useMDXComponents","useMDXScope","scope","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","text","length","slice"],"mappings":"gFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,kFCTTG,EAAS,CACd,QACA,UACA,QACA,QACA,OACA,QACA,QACA,SACA,aACA,UACA,YACA,aAGc,SAASC,EAAcC,GACrC,IAAIC,EAKJ,OAJAA,EAAUD,EAAKE,MAAM,KACEC,SAASF,EAAQ,IAAvB,OAChBH,EAAOK,SAASF,EAAQ,IAAM,GADd,KAEZA,EAAQ,K,2DCpBd,sMASMG,GATN,UASmB,CAAEC,cAIN,SAASC,EAAT,GAAqC,IAATC,EAAS,EAAjBC,KAAQD,IAE1C,OADAE,QAAQC,IAAIH,GAEX,kBAAC,IAAD,KACC,kBAAC,IAAD,CACCI,MAAOC,YAAaL,EAAIM,YAAYF,MAAO,IAC3CG,YAAaP,EAAIM,YAAYC,cAE9B,6BAASC,UAAU,WAAWC,GAAIT,EAAIS,IACrC,wBAAID,UAAU,mBAAmBR,EAAIM,YAAYF,OACjD,wBAAII,UAAU,kBACZhB,YAAcQ,EAAIM,YAAYb,OAEhC,kBAAC,cAAD,CAAaiB,WAAYb,EAAYW,UAAU,QAC9C,kBAAC,cAAD,KAAcR,EAAIW,OAEnB,uBACCC,QAAS,WACRC,OAAOC,SAAS,EAAG,IAEpBN,UAAU,sBACVJ,MAAM,qBALP,OAaG,IAAMW,EAAY,c,qrEC1CzB,IAAMC,EAAQ3B,EAAd,Q,EACkCA,EAAQ,QAAlC4B,E,EAAAA,iBAAkBjB,E,EAAAA,IAClBkB,EAAgB7B,EAAQ,QAAxB6B,YAER5B,UAAiB,SAAqB,GAKlC,IAJF6B,EAIC,EAJDA,MACAT,EAGC,EAHDA,WACAU,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBL,EAAtB,GACMM,EAAWL,EAFhB,GAKKM,EAAMR,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMS,EAAS,GAGbT,MAHa,EAIbhB,OAJF,GAQM0B,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAOJ,EAAA,mBAA2BN,WAAYY,GAA9C,M,kCClCa,SAASjB,EAAa0B,EAAMC,GAC1C,OAAID,EAAKC,QAAUA,EACXD,EAEAA,EAAKE,MAAM,EAAGD,GAAU,MAJjC","file":"component---src-components-post-page-postpage-tsx-512ace32965fd59130c7.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const months = [\n\t\"Enero\",\n\t\"Febrero\",\n\t\"Marzo\",\n\t\"April\",\n\t\"Mayo\",\n\t\"Junio\",\n\t\"Julio\",\n\t\"Agosto\",\n\t\"Septiembre\",\n\t\"Octubre\",\n\t\"Noviembre\",\n\t\"Diciembre\",\n]\n\nexport default function dateInSpanish(date) {\n\tvar dateArr = []\n\tdateArr = date.split(\"-\")\n\tvar dateInEnglish = `${parseInt(dateArr[2])} de ${\n\t\tmonths[parseInt(dateArr[1]) - 1]\n\t}, ${dateArr[0]}`\n\treturn dateInEnglish\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport { Link } from \"gatsby\"\nimport Layout from \"../Layout/layout\"\nimport SEO from \"../Utils/seo\"\nimport truncateText from \"../Utils/truncateText\"\nimport dateInSpanish from \"../Utils/dateInSpanish\"\nconst shortcodes = { Link }\n\nimport \"./postpage.scss\"\n\nexport default function PostPage({ data: { mdx } }) {\n\tconsole.log(mdx)\n\treturn (\n\t\t<Layout>\n\t\t\t<SEO\n\t\t\t\ttitle={truncateText(mdx.frontmatter.title, 17)}\n\t\t\t\tdescription={mdx.frontmatter.description}\n\t\t\t/>\n\t\t\t<article className=\"PostPage\" id={mdx.id}>\n\t\t\t\t<h1 className=\"PostPage__title\">{mdx.frontmatter.title}</h1>\n\t\t\t\t<h3 className=\"PostPage__date\">\n\t\t\t\t\t{dateInSpanish(mdx.frontmatter.date)}\n\t\t\t\t</h3>\n\t\t\t\t<MDXProvider components={shortcodes} className=\"test\">\n\t\t\t\t\t<MDXRenderer>{mdx.body}</MDXRenderer>\n\t\t\t\t</MDXProvider>\n\t\t\t\t<a\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\twindow.scrollTo(0, 0)\n\t\t\t\t\t}}\n\t\t\t\t\tclassName=\"PostPage__topbutton\"\n\t\t\t\t\ttitle=\"Go to top of page\"\n\t\t\t\t>\n\t\t\t\t\tâ†‘\n\t\t\t\t</a>\n\t\t\t</article>\n\t\t</Layout>\n\t)\n}\nexport const pageQuery = graphql`\n\tquery BlogPostQuery($id: String) {\n\t\tmdx(id: { eq: $id }) {\n\t\t\tid\n\t\t\tbody\n\t\t\tfrontmatter {\n\t\t\t\ttitle\n\t\t\t\tdescription\n\t\t\t\tdate\n\t\t\t}\n\t\t}\n\t}\n`\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","export default function truncateText(text, length) {\n\tif (text.length <= length) {\n\t\treturn text\n\t} else {\n\t\treturn text.slice(0, length) + \"...\"\n\t}\n}\n"],"sourceRoot":""}